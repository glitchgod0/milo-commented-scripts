(spew
   ; CHANNEL 6: state change messages (main, GameMgr, Meta, Mgr)
   ; CHANNEL 7: timing information (main, GameMgr, Meta, Mgr)

;   (Avatar (channels 21))
;   (AvatarPart (channels 2 5 29))
;   (MemcardMgr)
;   (MemcardTasks)
;   (Campaign)
;   (FreqMaker)
;   (Mgr (channels 7))
;   (main (channels 7))
;   (Meta (channels 7))
;   (WorldMgr (channels 7))
;   (File (channels 2))
;   (main (channels 1 6))
;   (Meta (channels 6 7))
;   (GameMgr (channels 6))
;   (Mgr (channels 6))
;   (FreqScreen (channels 6))
;   (Panels)
; 	 (ArkFile (channels 2))
;   (task)
;   (nettask)
;   (lobbyrt)
;   (lobbytasks)
;   (launchpadrt)
;   (launchpadtasks)
;   (gemcatcher (channels 0))
;   (gemiter)
;   (catchtrackstate)
;   (catchtrackdisplay)
;   (tutorialgamelogic (channels 99))
;   (tutorialtasks)
;   (scripttrackbuilder)
;   (datafunc)
;   (backmusic)
;	(SynthPs2)
)

(system
   (profiler
      ;(enabled TRUE)
   )
)

(quick-cheats
   (left
      (kPad_R2 (meta_start_game))
      (kPad_R1 (meta_change_screen s_g_sel_arena))
      (kPad_Start (exit_app))
   
      ; game cheats:
      (kPad_X (play_all_gems)) ; play all gems in a catch track
      (kPad_Square (mute_other_tracks)) ; mute unoccupied tracks
      (kPad_Circle (freestyle (controller 0))) ; toggle freestyling
      (kPad_Tri (practice_mode)) ; toggle practice mode
      (kPad_DDown (slow)) ; toggle slow mode
   )
   (right
      (kPad_Tri (no_capture)) ; can't capture gems
      (kPad_X (autocatcher (controller 0))) ; deploy autocatcher powerup
      (kPad_Square (bumper (controller 0))) ; deploy bumper powerup
      (kPad_Circle (crippler (controller 0))) ; deploy crippler powerup
      (kPad_DRight (multiplier (controller 0))) ; deploy multiplier powerup
      (kPad_DUp (juice 1)) ; increase juice by 1
      (kPad_DDown (juice -1)) ; decrease juice by 1
      ;(kPad_L2 (testmemcard)) ; Call memcard test function, temporary!!!
   )
)

(rnd
   (show_timers FALSE)
   (show_stats FALSE)
   (show_rate FALSE)
   (clear_color 0.0 0.0 0.0)
)

(timer
   cycle
)

(ui
   ; list the shared .rnd files here
    (shared_rnd_files
      "Metagame/common.rnd"
      "Metagame/gizmo.rnd"
    )
    (allowed_rnd_merges
       base_freq.tex
    )

   (panel_enter_exit
      ; frames for the enter/exit transition animations.  Note that
      ; it is legal to have a decreasing frame interval, and to
      ; re-use part of it.  For example, enter could go 0->100 and
      ; exit 100->0.

      (enter_start_frame 0.0)
      (enter_stop_frame 240.0)
      (exit_start_frame 241.0)
      (exit_stop_frame 300.0)
   )
)

(gfx
;   (show_grid FALSE)
   (show_disabled_panels FALSE)

; uncomment this to break the seeker up at each bar (displays using "endcaps")
;   (seeker_endcaps_always TRUE)
)

(freq2
   (start_in_metagame TRUE)
)

(synth
;   (use_ps2_synth_on_windows TRUE)
;   (use_null_synth TRUE)
)

(net
   (server_name "meggan3.scea.com")
   (server_port 7000)
   )

(db
   (songs
      ;; base name <song data file>
      ;;
      ;; Looks up localization tokens based on base name, like *_TITLE, 
      ;; *_BIO, *_ARTIST, in the language file *_songs.txt
      ;;
      (arena Constructo
        (TUT0 <Songs/tut0/tut0.txt>)
        ;;(SONG1 <Songs/song1/song1.txt>) ; a short song, for testing
        (GARBAGE <Songs/garbage/garbage.txt>)
        (BASELINE <Songs/Baseline/Baseline.txt>)
        (TUT1 <Songs/tut1/tut1.txt>)
      )
   )

   ; stuff below here in the db array is only relevant if you are skipping the
   ; metagame (otherwise, the values are overridden by the metagame.
 
   ;(num_players 2)
   (rule_set kRuleGame)
   ;(practice_mode TRUE)
   (skill_level 0) ; 0-3

   ; uncomment ONE of the following:
   ;(song FUNKYDOPE)
   ;(song OUTTHEBOX)
   ;(song SOB)
   ;(song HOUSE)
   ;(song WEEZER)
   (song GARBAGE)
   ;(song ROCKSTAR)
   ;(song KOMPUTER)
   ;(song DRUMNBASS)
   ;(song BASELINE)
   ;(song SPASTIK)
   ;(song LOGAN7)
   ;(song GEDGRIMES)
   ;(song MEKON)
   ;(song DIESELBOY)
   (arena "No arena")
   ;(arena "ConstructoP1")
   ;(arena "Constructo_Boss")
)

(game
   (stats
      ;(file "stats") ; must be in root directory
      ;(memcard 0) ;memcard number to write to, or -1 to write to file on PC
   )

   ;(record_to_file "record/record")
   ;(play_from_file "record/record")
   (record_to_memcard -1) ; if -1, record to file, otherwise record to host.
   ;(zero_rand_seed TRUE)

   ;(play_all_gems TRUE)  ; uncomment to play all gems, hit or not
   ;(force_feedback_enabled FALSE)
   ;(strand_bars 4 4)

   ; uncomment these two for freq1-style mechanic:
   ;(checkpoints FALSE)
   ;(checkpoint_bars 0)

   ; for demo build: only autocatcher and slowdown powerups
   (powerup_dist
     (autocatcher 1.0 1.0 1.0 1.0)
     (multiplier  0.0 1.0 1.0 1.0)
     (slowdown    1.0 1.0 1.0 1.0)
     (freestyle   0.0 0.0 0.0 0.0)
     (bumper      0.0 1.0 1.0 1.0)
     (crippler    0.0 1.0 1.0 1.0)
   )
)

(metagame
   (start_file "Metagame/demo.ui")
	(trigger_file "Metagame/Arena/demo_metagame_arena.txt")

   ; attract mode:
   (attract_songs
      (
         (file "attract/garbage_solo_brutal_demo")
         (song GARBAGE)
         (skill_level 2)
         (num_players 1)
      )
      (
         (file "attract/baseline_solo_brutal_demo")
         (song BASELINE)
         (skill_level 2)
         (num_players 1)
      )
   )

	 ( speed_up
	   ("start" "start2main")
	   ("main" "main2solofreq")
	   ("f_sel" "solofreq2soloskill")
	   ("f_confirm" "solofreq2soloskill")
	   ("f_load" "solofreq2soloskill")
	   ("s_g_sel_skill" "soloskill2soloarena")

	   ("s_g_sel_song" "solosong2soloarena")
	   ("s_g_sel_arena" "soloarena2soloskill" )
	   ("s_mode" "soloskill2solofreq")
	   ("f_sel" "solofreq2main")
	   ("main" "main2start")
	 )

	 ( stop_speed_up
	   ("start2main" "main")
	   ("main2solofreq" "f_sel")
	   ("solofreq2soloskill" "s_g_sel_skill")
	   ("soloskill2soloarena" "s_g_sel_song")

	   ("solosong2soloarena" "s_g_sel_skill")
	   ("soloskill2solofreq" "f_sel")
	   ("solofreq2main" "main")
	   ("main2start" "start")
	 )

)

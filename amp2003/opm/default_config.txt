; This is the default configuration file.  It defines initialization parameters
; for all modules.  It is loaded in SystemInit() before modules are initted.
; Modules access it through GetSystemConfig().
;
; An application may override these default parameters with its own 
; configuration file, by passing it to SystemInit().  It is merged with the
; default configuration file before modules are initted.

<default_macros.txt>

(system
   (iop_modules
      ("iop/sio2man.irx")
      ("iop/mcman.irx")
      ("iop/mcserv.irx")
      ("iop/usbd.irx")
      ("iop/usbkb.irx" "keybd=1" "debug=0")
      ("iop/padman.irx")
      ("iop/msifrpc.irx")
      ("iop/libsd.irx")
      ("iop/mtapman.irx")
      ("iop/sdrdrv.irx")
      ("iop/synth_%.irx")
      ("iop/softfx_%.irx")
   )
   
   (profiler
      (enabled FALSE) ; note that profiling always disabled in SHIP builds
      (buffer_size 8192)  ; how many data points to sample per UI update
      (sample_rate k4KHz)  ; how often to sample EE performance
                           ; can be k1KHz, k2KHz, k4KHz, k10KHz, k20KHz
   )

   (language english)  ; language setting when running on the tool
)

(mem
   (heaps
      (main 27000000)
      )
   (pool
      (big_hunk 3000000)
      (small_hunk 50000)
      )
   )

(joypad
   (deadzone 24) ; out of 256
   (threshold 0.75) ; 0 to 1
)

(file
   (buf_size 8192)
)

(synth
   (use_ps2_synth_on_windows FALSE)
   (use_null_synth FALSE)
   (lag_ms 40) ; how much the iop synth lags behind the ee; should be > 17ms
   (iop_verbose FALSE)
)

(net
   (startup_modules
      ("iop/netcnf.irx" (concat "icon=" (file "sys_net.ico")) 
         (concat "iconsys=" (file "icon.sys")))
      ("iop/inet.irx")
      ("iop/inetctl.irx" "-no_auto" "-verbose")
      ("iop/ezncnf_%.irx")
      ("iop/eznctl_%.irx")
      ("iop/libnetb.irx")
   )
   (optional_modules
      ("iop/ppp.irx")
      ("iop/pppoe.irx")

      ("iop/dev9.irx")
      ("iop/smap.irx")
      ("iop/spduart.irx" (concat "dial=" (file "dial_spd.cnf")))

      ("iop/an986.irx")
      ("iop/cxtmdm.irx"  (concat "dial=" (file "dial_cxt.cnf")))
   )
)


;; quick-cheats work if a player's joypad is in "left shift mode" (both L1 and 
;; L2 down) or "right shift mode" (both R1 and R2 down). long cheats require 
;; the sequence to be pressed in order and fast. In either case, if the cheat
;; is entered correctly, the callback will fire. Callbacks must be registered 
;; in c-code. See "utl/Cheats.h"
;;
;; button codes are defined in default_macros.txt

(quick-cheats
   ;; examples:
   ;;(kPad_Tri (test 1))
   ;;(kPad_Square (test 2))

   ; left shift mode: L1 and L2
   (left 
      (kPad_DLeft (heap_report summary 0))   ; generate a summary report
      (kPad_DRight (heap_report dump 0))     ; generate a full heap dump
      (kPad_R3 (gfx save debug.rnd))
      (kPad_L3 (gfx no_arena))
      (kPad_Select (screen_dump))
      (kPad_DUp (gfx toggle_hud))
   )

   ; right shift mode: R1 and R2
   (right
      (kPad_DUp (gfx particle_report))
   )
)

(long-cheats
   ;; examples:
   ;;(kPad_L1 kPad_L2 kPad_R1 kPad_R2 
   ;; kPad_DLeft kPad_DUp kPad_DDown kPad_DRight (test 3))
   ;;(kPad_Tri kPad_Tri kPad_Tri kPad_Tri (test 4))
   )

(spew
   ;  Examples
   ; (file ( ouputs "console" "foo.txt" ) ( channels 1 4 5))
   ; (foo ( ouputs "bar.txt" ) ( channels SPEW_ALL_CHANNELS ))
   ; (test)
   ; Channels:
   ; CHANNEL 6: state change messages
   ; CHANNEL 7: timing information
)

(math
   (sin_table_size 64)
)

(timer
; Uncomment timer names you wish to update and display
;     only about 20 can fit on display

; rndps2 timers 
   ; setup
   ; data
   ; flush

; rndobj timers 
   ; anim
   ; updateworldxfm
   ; draw
   ; sync
   cycle

; These are all cumulative and exclusive:
   ; "top other"
   ; "top meta exec"
   ; "top world exec"
   ; "top meta draw"
   ; "top world draw"
   ; "top synth"

; Tnl timers
   ; "tnlgeom anim"
   ; "tnlgeom draw"
   ; "tnlgeom verts"

; -- GFX stuff --
   ; "gfx exec"
   ; "gfx draw"
   ; "camera"
   ; "gem exec"
   ; "gfxtnl shape"
   ; "gfxtnl exec"
   ; "gfxtnl draw"
   ; "arena anim"
   ; "arena draw"
   ; "gfxtnl anim"
   ; "hud anim"
   ; "gfx change track"
   ; "gfx connector exec"
   ; "gfx connector place"
   ; "gfx seeker exec"
   ; "gfx crippler"
)

(rnd
   (bpp 16)
   (width 640)
   (height 480)
   (title "Rnd Program")
   (show_timers FALSE)
   (show_stats FALSE)
   (show_rate FALSE) ; needs cycle timer enabled
   (timer_maxms 50)
   (full_screen FALSE)
   (clear_color 0.3 0.3 0.3)
)

(ui
   ; allowable load groups (first one is default)
   (allowable_groups front_end always intro)

   ; list the shared .rnd files here
   ; (shared_rnd_files    )

   ; Objects which are allowed to already exist when the
   ; shared_rnd_files are loaded
   (allowed_rnd_merges)

   ; navigation button repeat parameters
   (nav_repeat
      ; the function used to determine the delay between one repeat
      ; and the next (in animation frames) is:
      ; delay = (scale_factor *
      ;          (exponential_base ^ (repeatcount - 1))) / (pressure ^ 3)
      

      (scale_factor 500.0)
      (exponential_base 0.3)
      (accel_cutoff 2)      ; after 10 repeats, repeat no longer accelerates

      ; new way - there's a pause, then fast repeats
      (max_delay_frames 500.0)
      (min_delay_frames 20.0)
   )
   (button_select
      (num_flashes 2)
      (frames_selected 50.0)
      (frames_normal 40.0)
   )
   (panel_enter_exit
      ; frames for the enter/exit transition animations.  Note that
      ; it is legal to have a decreasing frame interval, and to
      ; re-use part of it.  For example, enter could go 0->100 and
      ; exit 100->0.

      (enter_start_frame 0.0)
      (enter_stop_frame 100.0)
      (exit_start_frame 100.0)
      (exit_stop_frame 200.0)
   )

   ; This can be used to override the .UI files' starting screen.  If
   ; you're testing a particular screen, and want to start there, 
   ; uncommment this (remove the semicolon) and replace
   ; "screen_name_here" with the name of your screen.
   ; (start_screen screen_name_here)

   ; when set to true, enables editing & troubleshooting features 
   (editmode FALSE)
)

(locale
   ; Typical app example:
   (english english_screens.txt english_messages.txt english_songs.txt)
)

(trigger
   (debug
   ;   beat
   ;   time
   ;   component_select
   ;   component_select_start
   ;   component_focus
   ;   panel_focus
   ;   screen_change
   ;   button
   ;   begin
   ;   win
   ;   lose
   ;   quit
   ;   score
   ;   hit
   ;   miss
   ;   gem
   ;   new_bar
   ;   phrase_capture
   ;   phrase_miss
   ;   new_track
   ;   powerup_capture
   ;   powerup_deploy
   ;   new_leader
   ;   health
   )
)

(gfx
   <default_gfx_config.txt>
)

"DEFAULT_INPUTMAP" { 
  (buttons
     (kPad_L1 kBtn_PlayNote0)
     (kPad_R1 kBtn_PlayNote1)
     (kPad_R2 kBtn_PlayNote2)
     (kPad_Square kBtn_PlayNote0)
     (kPad_Tri kBtn_PlayNote1)
     (kPad_Circle kBtn_PlayNote2)
     (kPad_DLeft kBtn_RotLeft)
     (kPad_DRight kBtn_RotRight)
     (kPad_DUp kBtn_ToggleFreq)
     (kPad_Select kBtn_CamChange)
     (kPad_X kBtn_Powerup)
     (kPad_L3 kBtn_GuitarAxe)
  )
  (sticks
     (kLeftAnalog kStick_Expression)
     (kRightAnalog kStick_Camera)
  )
}

(db
   (num_players 1) ; 1-4
   (rule_set kRuleGame)
   (player_info
      ( (local TRUE) (color green) (name BOB) (id 1) )
      ( (local TRUE) (color purple) (name STINKY) (id 0) )
      ( (local TRUE) (color red) (name GUMBY) (id 3) )
      ( (local FALSE) (color yellow) (name HENRIETTA) (id 4) )
   )
   (skill_level 0) ; 0-3
   (practice_mode FALSE)
   (arena "Blue Pylon")
   (song FUNKYDOPE)
   (input_map
      (  ; player 1
         DEFAULT_INPUTMAP
      )
      (  ; player 2
         DEFAULT_INPUTMAP
      )
      (  ; player 3
         DEFAULT_INPUTMAP
      )
      (  ; player 4
         DEFAULT_INPUTMAP
      )
   )

   ; application config files are expected to fill this out if
   ; required; otherwise, it must be here and empty so that DB can
   ; init.  (gfxtest, among other apps I think, uses DB but has no songs)
   (songs)
   (tutorials)

   (shared_fx_midi_file "SoundFX/sharedFX.mid")
   (game_fx_midi_file "SoundFX/gameFX.mid")
   (meta_fx_midi_file "SoundFX/metaFX.mid")

   (fx_midi_file "SoundFX/FX.mid")

   (avatar

      (base_rnd "FreqMaker/fullfreq.rnd")
      (parts <default_parts.txt>)

      ;; Camera positions for normal and close-up views of the avatar
      (cams
         (arms       (trans -9 -208 73) (rot -4 0 -3))
         (legs       (trans -9 -208 73) (rot -4 0 -3))
         (torsos     (trans -2 -115 96) (rot -4 0 -3))
         (heads      (trans 63 -76 108) (rot -5 0 39))
         (face_gear  (trans 67 -81 109) (rot -5 0 39))
         (head_gear  (trans 67 -81 109) (rot -5 0 39))
         (emblems    (trans -2 -115 96) (rot -4 0 -3))
         (f_maker    (trans -9 -208 73) (rot -4 0 -3))
         (bust       (trans 10 -107 99)  (rot -5 0 4))
         (game_far   (trans 73 -202 100) (rot -11 0 20))
         (game_close (trans 28 -116 117)  (rot -17 0 15))
      )

      ;; How many frames to blend over.  Instrument will fade down
      ;; and up, each in half as many frames as body_blend
      (body_blend   200.0)
      (gem_hit_blend 80.0)
      (time_to_idle  3840.0)  ; 2 bars
      (cam_blend    480.0)

      ;; (name, start frame, duration)
      (body_anims
         (guitar       0     1920)
         (bass         1920  1920)
         (synth        3840  1920)
         (fx           5760  1920)
         (drum         7680  1920)
         (vocal        9600  1920)
         (idle         11520 1920)
         (idle_meta    32640 1920)
         (idle_f_maker 34560 3840)
         (checkpoint1  13440 3840)
         (checkpoint2  21120 3840)
         (win          24960 7680)
         (lose         17280 3840)
      )

      (instr_anims
         ;; animations are per instrument
         ;; instruments can be extended, so we're not using InstType
         (guitar
            (kIA_Left      0    240)
            (kIA_Center    240  240)
            (kIA_Right     480  240)
            (kIA_Idle      240  2)
            (kIA_Special_1 240  240)
            (kIA_Special_2 240  240)
            (kIA_Special_3 240  240)
         )
         (bass
            (kIA_Left      1920 240)
            (kIA_Center    2160 240)
            (kIA_Right     2400 240)
            (kIA_Idle      2160 2)
            (kIA_Special_1 2160 240)  ;; special move, tbd
            (kIA_Special_2 2160 240)  ;; special move, tbd
            (kIA_Special_3 2160 240)  ;; special move, tbd
         )
         (synth
            (kIA_Left      3840 240)
            (kIA_Center    4080 240)
            (kIA_Right     4320 240)
            (kIA_Idle      4080 2)
            (kIA_Special_1 4080 240)
            (kIA_Special_2 4080 240)
            (kIA_Special_3 4080 240)
         )
         (fx
            (kIA_Left      5760 240)
            (kIA_Center    6000 240)
            (kIA_Right     6240 240)
            (kIA_Idle      6000 2)
            (kIA_Special_1 6000 240)
            (kIA_Special_2 6000 240)
            (kIA_Special_3 6000 240)
         )
         (drum
            (kIA_Left      7680 240)
            (kIA_Center    7920 240)
            (kIA_Right     8160 240)
            (kIA_Idle      7920 2)
            (kIA_Special_1 7920 240)
            (kIA_Special_2 7920 240)
            (kIA_Special_3 7920 240)
         )
         (vocal
            (kIA_Left      9600 1920)
            (kIA_Center    9600 1920)
            (kIA_Right     9600 1920)
            (kIA_Idle      9600 1920)
            (kIA_Special_1 9600 1920)
            (kIA_Special_2 9600 1920)
            (kIA_Special_3 9600 1920)
         )
         (win
            (kIA_Left      24960 7680)
            (kIA_Center    24960 7680)
            (kIA_Right     24960 7680)
            (kIA_Idle      24960 7680)
         )
         (lose
            (kIA_Left      17280 3840)
            (kIA_Center    17280 3840)
            (kIA_Right     17280 3840)
            (kIA_Idle      17280 3840)
         )
         (checkpoint1
            (kIA_Left      13440 3840)
            (kIA_Center    13440 3840)
            (kIA_Right     13440 3840)
            (kIA_Idle      13440 3840)
         )
         (checkpoint2
            (kIA_Left      21120 3840)
            (kIA_Center    21120 3840)
            (kIA_Right     21120 3840)
            (kIA_Idle      21120 3840)
         )
         (idle
            (kIA_Left      11520 1920)
            (kIA_Center    11520 1920)
            (kIA_Right     11520 1920)
            (kIA_Idle      11520 1920)
         )
         (idle_meta
            (kIA_Left      32640 1920)
            (kIA_Center    32640 1920)
            (kIA_Right     32640 1920)
            (kIA_Idle      32640 1920)
         )
         (idle_f_maker
            (kIA_Left      34560 3840)
            (kIA_Center    34560 3840)
            (kIA_Right     34560 3840)
            (kIA_Idle      34560 3840)
         )
      )

      ; Order is important
      (default_settings
         ;; (type X) (color Y)
         (kInstrument (type idle))
         (kHeadGear   (type fm_hg_06))
         (kFaceGear   (type fm_none))
         (kHead       (type fm_head_42) (color 0.5 0.5 0.5))
         (kLeftArm    (type fm_arms_08) (color 0.5 0.5 0.5))
         (kRightArm   (type fm_arms_08) (color 0.5 0.5 0.5))
         (kTorso      (type fm_torso_06) (emblem fm_none) (color 0.5 0.5 0.5))
         (kLowerBody  (type fm_lowerbody_04) (color 0.5 0.5 0.5))
      )
   )
)

(game
   <default_game_config.txt>
)

(metagame
   <default_meta_config.txt>
)

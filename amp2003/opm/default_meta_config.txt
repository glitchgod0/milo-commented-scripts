(prefabs
   ;; (prefab_name (type X) (color Y))
   ("Big Dude"
      (kInstrument (type idle))
      (kHeadGear   (type fm_hg_06))
      (kFaceGear   (type fm_none))
      (kHead       (type fm_head_42) (color 0.5 0.5 0.5))
      (kLeftArm    (type fm_arms_08) (color 0.5 0.5 0.5))
      (kRightArm   (type fm_arms_08) (color 0.5 0.5 0.5))
      (kTorso      (type fm_torso_06) (emblem fm_none) (color 0.5 0.5 0.5))
      (kLowerBody  (type fm_lowerbody_04) (color 0.5 0.5 0.5))
   )
   (Gwen
      (kInstrument (type idle))
      (kHeadGear   (type fm_none))
      (kFaceGear   (type fm_fg_02))
      (kHead       (type fm_head_46) (color 0.5 0.5 0.5))
      (kLeftArm    (type fm_arms_06) (color 0.5 0.5 0.5))
      (kRightArm   (type fm_arms_06) (color 0.5 0.5 0.5))
      (kTorso      (type fm_torso_08) (emblem fm_none) (color 0.5 0.5 0.5))
      (kLowerBody  (type fm_lowerbody_06) (color 0.5 0.5 0.5))
   )
   (Odin
      (kInstrument (type idle))
      (kHeadGear   (type fm_none))
      (kFaceGear   (type fm_none))
      (kHead       (type fm_head_41) (color 0.64 0.64 0.64))
      (kLeftArm    (type fm_arms_07) (color 0.64 0.64 0.64))
      (kRightArm   (type fm_arms_07) (color 0.64 0.64 0.64))
      (kTorso      (type fm_torso_09) (emblem fm_none) (color 0.64 0.64 0.64))
      (kLowerBody  (type fm_lowerbody_07) (color 0.64 0.64 0.64))
   )
   ("Blue Man Group"
      (kInstrument (type idle))
      (kHeadGear   (type fm_hg_07))
      (kFaceGear   (type fm_none))
      (kHead       (type fm_head_33) (color 0.5 0.5 0.5))
      (kLeftArm    (type fm_arms_05) (color 0 0.55 0.95))
      (kRightArm   (type fm_arms_05) (color 0 0.55 0.95))
      (kTorso      (type fm_torso_07) (emblem fm_emblem_06) (color 0.5 0.5 0.5))
      (kLowerBody  (type fm_lowerbody_09) (color 0.5 0.5 0.5))
   )
)

(start_file "Metagame/meta.ui")

(mc ; memory card
   ; directory naming constants
   (base_dir BASCUS-97125)
   (freq_dir_ext freqs)
   (remix_dir_ext mixes)
   (set_dir_ext settings)

   ; filenames ?
   (freq_ext ".frq")

   ; Size of our global, shared saving buffer
   (buff_size 10000)

   ; Names for data, used in the PS2 browser
   (freq_label "FreQ2 Campaigns")
   (remix_label "FreQ2 Mixes")
   (set_label "FreQ2 Settings")

   ; icon stuff...
   ; (icon_file)
   ; ()

   (max_saved_freqs 8)
   (max_saved_remixes 20)
   (max_saved_playlists 1)
)

(arena_prefix "Metagame_arena")

; help fonts
(help_fonts
   ("F1" "lucida_1_white.font")
   ("FC" "controller.font")
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; attract mode

(attract_enabled TRUE)
(attract_delay_ms 45000)
(attract_short_delay_ms 15000)
(attract_songs) ; filled in by app config file

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; metagame music

(music_max_volume 0.75) ; maximum volume of music (0-1)
(transition_fx_bank_file "SoundFX/transitionFX.bnk") ; goes into game fx slot
(meta_fx_bank_file "SoundFX/metaFX.bnk")
(meta_fx_bank_slot 1)
(music_shared_midi_file "Metagame/Songs/meta_music.mid")
(music_shared_bank_file "Metagame/Songs/meta_music.bnk")
(music_shared_bank_slot 2)
(music_swap_bank_slot 3)   ; unique to each metagame song
(music_bars 48) ; length of metagame loops
(music_fade_ticks 3840) ; length of crossfade
(effects
   (  
      (bus 1) ; core FX or soft FX (or both)

      ;-------------------------------
      ; soft FX
      (filter 
        (type kNoFx) ;; no FX so that freqnet will work ;;  kResonantFilter2
        (resonance 0.82)
      )
      (soft_fx_output kSignalDry) ; kSignalWet, kSignalDry, kSignalWetAndDry
      (fx_bus_to_softfx TRUE)
      (fx_bus_to_corefx TRUE)

      ;-------------------------------
      ; core FX

      ; mode can be one of:
      ; OFF, ROOM, STUDIO_A, STUDIO_B, STUDIO_C, HALL, SPACE, ECHO, DELAY, PIPE
      (mode DELAY)

      ; depth values can be 0-127
      ; 0 is full volume, negative phase
      ; 64 is silent
      ; 127 is full volume, positive phase
      (depth_left 127)
      (depth_right 127)

      (delay 0)  ; can be 0-127

      (feedback 0) ; can be 0-127
   )

   (
      (bus 2) ; core fx only
      (mode DELAY)
      (depth_left 80)
      (depth_right 80)
      (delay 100)  ; can be 0-127
      (feedback 30) ; can be 0-127
   )
)

(songs
   ; all metagame songs go here
   (<Metagame/Songs/meta_music_1.txt>)
   (<Metagame/Songs/meta_music_2.txt>)
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(freq_screen 
   ; to be draw before metagame panels are drawn
   (ui_environ "meta_panels.env")
   (ui_camera "f2mg.cam")

   ; anim frames for gizmo entry/exit
   (panel_gizmo_begin_frame 0)
   (panel_gizmo_anim_start 0)
   (panel_gizmo_anim_end 600.0)
   (panel_gizmo_interp_severity 3.0)

   ; how long the gizmo freqPanel open/shut anim takes
	(gizmo_freq_frame_anim_len 1920.0)

	; 1920 is slow, how much do we want to speed it up?
	; twice as fast? 4 times? 3 times?
	(gizmo_freq_frame_anim_speedup 1.0)
)

(freq_panel 
   ; enter exit of panels stuff
   (panel_anim_name "panel_2d_EE.tnm")
   (panel_enter_start_frame 0.0)
   (panel_enter_stop_frame 240.0)
   (panel_exit_start_frame 241.0)
   (panel_exit_stop_frame 300.0)

   ; freq gizmo that travels thru metagame world
   (panel_gizmo_orig_pos 0 0 64)

   ; offsets to use for this gizmo
   (panel_gizmo_offset_1  -46.130833 70.069641 65.897614)
   (panel_gizmo_offset_2 -0.013292 69.642784 -62.16259)
   (panel_gizmo_offset_3  44.693169 70.069641 66.150299)
   (panel_gizmo_offset_4  0.5 -0.7 0.3)
      
   (panel_mat_anim_enter_start 0.0)
   (panel_mat_anim_enter_stop 240.0)
   (panel_mat_anim_exit_start 241.0)
   (panel_mat_anim_exit_stop 300.0)
)

(speed_up_multiplier 8)
( speed_up
  ("start" "start2main")
  ("main" "main2solofreq")
  ("f_sel" "solofreq2soloskill")
  ("f_confirm" "solofreq2soloskill")
  ("f_load" "solofreq2soloskill")
  ("s_g_sel_skill" "soloskill2soloarena")
  ("s_g_sel_arena" "soloarena2solosong" )

  ("s_g_sel_song" "solosong2soloarena")
  ("s_g_sel_arena" "soloarena2soloskill" )
  ("s_mode" "soloskill2solofreq")
  ("f_new" "solofreq2main")
  ("main" "main2start")
)

( stop_speed_up
  ("start2main" "main")
  ("main2solofreq" "f_new")
  ("solofreq2soloskill" "s_mode")
  ("soloskill2soloarena" "s_g_sel_arena")
  ("soloarena2solosong" "s_g_sel_song")

  ("solosong2soloarena" "s_g_sel_arena")
  ("soloarena2soloskill" "s_g_sel_skill")
  ("soloskill2solofreq" "f_sel")
  ("solofreq2main" "main")
  ("main2start" "start")
)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; if you want to automatically proceed through metagame screens, put 
; the screen name and the button name into the "shortcuts" array.

"SKIP_TO_NET"
{
  (main freqnet_but)
  (f_net_sel prefab)
  (fn_config 01_but)
  (net_portal enter)
  (fn_sel_server 01_but)
  (fn_welcome 01_but)
}

"SKIP_TO_SOLO"
{
  (main solo_but)
  (f_new new)
  (f_sel prefab)
  (s_mode game_but)
  (s_g_sel_skill novice_but)
  (s_g_sel_arena Constructo) ; arena
  (s_g_sel_song 01_but) ; song
}

(shortcuts
;   SKIP_TO_NET
)

